Task is added to sprint:
1) Write checklist for all requirement
2) Public checklist for review
3) Manual testing
4) Automation on feature

Code conventions:
https://github.com/rubocop/ruby-style-guide

Git
Forking workflow
https://www.atlassian.com/git/tutorials/comparing-workflows/forking-workflow

Create Pull Request
https://opensource.com/article/19/7/create-pull-request-github


Git command
set upstream to central repo
make changes
make new branch
make commit
=======
Workflow for creating PR:
set upstream to central repo ( git remote add upstream https://github.com/AndriiMish/TAQC.git )
make new branch (git checkout -b new_branch)
make changes
make commit (git add -> git commit -m 'message' -> git push)

create PR
ask for review
fix comments
merge after approve

checkout to newly created branch

git checkout -b branchname

get latest changes from upstream -> getting changes to your local
git checkout master
git fetch upstream   -> get all branches from upstream
git merge upstream/master   -> merge changes from branch master of upstream to current branch
git push  -> push changes to local branch

you're on some branch
hides local changes
git checkout new_branch
git stash
git checkout master
git fetch upstream
git merge upstream/master
git push
git checkout new_branch
git rebase
git stash apply
=======
# git checkout -b branchname

get latest changes from upstream -> getting changes to your local
# git checkout master
# git fetch upstream   -> get all branches from upstream
# git merge upstream/master   -> merge changes from branch master of upstream to current branch
# git push  -> push changes to local branch

you're on some branch
hides local changes
# git checkout new_branch
# git stash
# git checkout master
# git fetch upstream
# git merge upstream/master
# git push
# git checkout new_branch
# git rebase
# git stash apply


Central repo
Each user can fork repo to it's own
Each user can make changes to it's fork
Each user can create pull requests
Pull request are reviewable
Pull request merge central repository

Task:
1) Fork Git repo
2) Add checklist.txt or dummy file to check how it works
3) Create PullRequest


20/08

Git squash
https://medium.com/nuances-of-programming/как-сжимать-коммиты-в-git-с-помощью-git-squash-8a84b9f62734

bundler -> manage gems added to project
https://bundler.io
before start working with project
# bundle install

RSpec
https://relishapp.com/rspec/docs/gettingstarted
in folder with spec run command rspec --init
it will create spec_helper file

Docs on hooks etc
https://relishapp.com/rspec/rspec-core/v/2-0/docs/hooks/before-and-after-hooks

Betterspecs
https://www.betterspecs.org/#describe

Rspec matchers
https://relishapp.com/rspec/rspec-expectations/docs/built-in-matchers

!!!!!! Driver for Firefox
Update Firefox
Download geckodriver
https://github.com/mozilla/geckodriver/releases
Place geckodriver into any folder listed in PATH
for macos check it via command -->  echo $PATH
for windows https://www.architectryan.com/2018/03/17/add-to-the-path-on-windows-10/


Locators for elements
1. ID
2. Class
3. Name
4. css
5. xpath

If You want to stop execution and check/test anything
on line with error with error

TDB:
# parent class for pages


TO SETUP ENVIRONMENT:
1) install bundler
2) install geckodriver
3) add folder with geckodriver to ENV variable PATH (or move it to one already written)
4) run 'bundle update' from this folder
5) run 'rspec spec/test/sign_in_ui_spec.rb  --color --format doc' to verify all setup is good

23.08
require 'pry' may be needed at top of file
to debug
1) add binding.pry to file on some line
2) exit continues running
3) exit! exits immediately

# rspec spec/search_spec.rb:37 lets You run only test at line 37


